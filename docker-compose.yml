version: '3.8'

networks:
  eatery:
    driver: bridge

services:
  # PHP-FPM Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eatery_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - eatery
    depends_on:
      - db
      - redis

  # Nginx Web Server Service
  nginx:
    image: nginx:alpine
    container_name: eatery_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - eatery
    depends_on:
      - app

  # Telegram Bot Service
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eatery_bot
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan telegram:bot
    volumes:
      - ./:/var/www
    networks:
      - eatery
    depends_on:
      - app

  # PostgreSQL Database Service
  db:
    image: postgres:16.3-alpine
    container_name: eatery_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - eatery_data:/var/lib/postgresql/data
    networks:
      - eatery
    ports:
      - "5432:5432"

  # Redis Service
  redis:
    image: redis:latest
    container_name: eatery_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - eatery
    volumes:
      - redis_data:/data

volumes:
  eatery_data:
  redis_data:
